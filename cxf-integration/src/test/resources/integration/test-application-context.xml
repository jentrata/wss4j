<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:sec="http://cxf.apache.org/configuration/security"
       xmlns:http="http://cxf.apache.org/transports/http/configuration"
       xmlns:httpj="http://cxf.apache.org/transports/http-jetty/configuration"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:cxf="http://cxf.apache.org/core"
       xmlns:p="http://cxf.apache.org/policy"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
       http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
       http://cxf.apache.org/transports/http/configuration http://cxf.apache.org/schemas/configuration/http-conf.xsd
       http://cxf.apache.org/transports/http-jetty/configuration http://cxf.apache.org/schemas/configuration/http-jetty.xsd
       http://cxf.apache.org/configuration/security http://cxf.apache.org/schemas/configuration/security.xsd
       http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd">

    <import resource="classpath:META-INF/cxf/cxf.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>

   <!-- Uncomment for logging
    <cxf:bus>
        <cxf:features>
            <cxf:logging/>
        </cxf:features>
    </cxf:bus>
    -->
    
    <bean name="inSecurityProperties" class="org.apache.wss4j.stax.ext.WSSSecurityProperties">
        <property name="callbackHandler" ref="callbackHandler"/>
        <property name="outAction">
            <list>
                <util:constant static-field="org.apache.wss4j.stax.ext.WSSConstants.TIMESTAMP"/>
                <util:constant static-field="org.apache.wss4j.stax.ext.WSSConstants.SIGNATURE"/>
                <util:constant static-field="org.apache.wss4j.stax.ext.WSSConstants.ENCRYPT"/>
            </list>
        </property>
        <!--<property name="encryptionUser" value="transmitter"/>-->
        <property name="useReqSigCertForEncryption" value="true"/>
        <property name="skipDocumentEvents" value="true"/>
    </bean>

    <bean name="outSecurityProperties" class="org.apache.wss4j.stax.ext.WSSSecurityProperties">
        <property name="callbackHandler" ref="callbackHandler"/>
        <property name="outAction">
            <list>
                <util:constant static-field="org.apache.wss4j.stax.ext.WSSConstants.TIMESTAMP"/>
                <util:constant static-field="org.apache.wss4j.stax.ext.WSSConstants.SIGNATURE"/>
                <util:constant static-field="org.apache.wss4j.stax.ext.WSSConstants.ENCRYPT"/>
            </list>
        </property>
        <property name="signatureUser" value="receiver"/>
        <property name="useReqSigCertForEncryption" value="true"/>
        <property name="skipDocumentEvents" value="true"/>
    </bean>

    <!-- set decryptionKeystore in securityProperties -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="inSecurityProperties"/>
        <property name="targetMethod" value="loadDecryptionKeystore"/>
        <property name="arguments">
            <list>
                <value>classpath:receiver.jks</value>
                <value>default</value>
            </list>
        </property>
    </bean>

    <!-- set signature verification Keystore in securityProperties -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="inSecurityProperties"/>
        <property name="targetMethod" value="loadSignatureVerificationKeystore"/>
        <property name="arguments">
            <list>
                <value>classpath:receiver.jks</value>
                <value>default</value>
            </list>
        </property>
    </bean>

    <!-- set signature Keystore in securityProperties -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="outSecurityProperties"/>
        <property name="targetMethod" value="loadSignatureKeyStore"/>
        <property name="arguments">
            <list>
                <value>classpath:receiver.jks</value>
                <value>default</value>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="outSecurityProperties"/>
        <property name="targetMethod" value="addSignaturePart"/>
        <property name="arguments">
            <bean class="org.apache.xml.security.stax.ext.SecurePart">
                <constructor-arg>
                    <util:constant static-field="org.apache.wss4j.stax.ext.WSSConstants.TAG_soap11_Body"/>
                </constructor-arg>
                <constructor-arg value="Content"/>
            </bean>
        </property>
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="outSecurityProperties"/>
        <property name="targetMethod" value="addSignaturePart"/>
        <property name="arguments">
            <bean class="org.apache.xml.security.stax.ext.SecurePart">
                <constructor-arg>
                    <util:constant static-field="org.apache.wss4j.stax.ext.WSSConstants.TAG_wsu_Timestamp"/>
                </constructor-arg>
                <constructor-arg value="Element"/>
            </bean>
        </property>
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="outSecurityProperties"/>
        <property name="targetMethod" value="addSignaturePart"/>
        <property name="arguments">
            <bean class="org.apache.xml.security.stax.ext.SecurePart">
                <constructor-arg type="java.lang.String" value="cid:Attachments"/>
                <constructor-arg value="Element"/>
            </bean>
        </property>
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="outSecurityProperties"/>
        <property name="targetMethod" value="addEncryptionPart"/>
        <property name="arguments">
            <bean class="org.apache.xml.security.stax.ext.SecurePart">
                <constructor-arg>
                    <util:constant static-field="org.apache.wss4j.stax.ext.WSSConstants.TAG_soap11_Body"/>
                </constructor-arg>
                <constructor-arg value="Content"/>
            </bean>
        </property>
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="outSecurityProperties"/>
        <property name="targetMethod" value="addEncryptionPart"/>
        <property name="arguments">
            <bean class="org.apache.xml.security.stax.ext.SecurePart">
                <constructor-arg type="java.lang.String" value="cid:Attachments"/>
                <constructor-arg value="Element"/>
            </bean>
        </property>
    </bean>

    <!-- set encryption Keystore in securityProperties -->
    <!--
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="outSecurityProperties"/>
        <property name="targetMethod" value="loadEncryptionKeystore"/>
        <property name="arguments">
            <list>
                <value>classpath:receiver.jks</value>
                <value>default</value>
            </list>
        </property>
    </bean>
    -->

    <bean id="greeterServiceImpl" class="org.apache.wss4j.cxfIntegration.test.integration.GreeterServiceImpl">
    </bean>

    <jaxws:endpoint id="greeterService" implementor="#greeterServiceImpl"
                    wsdlLocation="classpath:integration/helloWorld.wsdl"
                    address="http://localhost:9001/GreeterService">
        <jaxws:inInterceptors>
            <ref bean="securityInInterceptor"/>
        </jaxws:inInterceptors>
        <jaxws:outInterceptors>
            <ref bean="securityOutInterceptor"/>
        </jaxws:outInterceptors>
    </jaxws:endpoint>

    <bean name="securityInInterceptor" class="org.apache.wss4j.cxfIntegration.interceptor.SecurityInInterceptor">
        <constructor-arg index="0" value="post-stream"/>
        <constructor-arg index="1" ref="inSecurityProperties"/>
    </bean>

    <bean name="securityOutInterceptor" class="org.apache.wss4j.cxfIntegration.interceptor.SecurityOutInterceptor">
        <constructor-arg index="0" value="pre-stream"/>
        <constructor-arg index="1" ref="outSecurityProperties"/>
    </bean>

    <bean name="callbackHandler" class="org.apache.wss4j.stax.test.CallbackHandlerImpl">
    </bean>

    <jaxws:endpoint id="greeterServiceWSS4J" implementor="#greeterServiceImpl"
                    wsdlLocation="classpath:integration/helloWorld.wsdl"
                    address="http://localhost:9001/GreeterServiceWSS4J">
        <jaxws:inInterceptors>
            <ref bean="wss4jInInterceptor"/>
        </jaxws:inInterceptors>
        <jaxws:outInterceptors>
            <ref bean="wss4jOutInterceptor"/>
        </jaxws:outInterceptors>
    </jaxws:endpoint>

    <bean name="wss4jInInterceptor" class="org.apache.wss4j.cxfIntegration.interceptor.WSS4JInInterceptor">
        <property name="properties">
            <map>
                <entry key="action" value="Timestamp Signature Encrypt"/>
                <entry key="passwordCallbackRef" value-ref="passwordCallbackHandlerWSS4J"/>
                <entry key="decryptionPropFile" value="receiver-crypto.properties"/>
                <entry key="signatureVerificationPropFile" value="receiver-crypto.properties"/>
            </map>
        </property>
    </bean>

    <bean name="wss4jOutInterceptor" class="org.apache.wss4j.cxfIntegration.interceptor.WSS4JOutInterceptor">
        <property name="properties">
            <map>
                <entry key="action" value="Timestamp Signature Encrypt"/>
                <entry key="passwordCallbackRef" value-ref="passwordCallbackHandlerWSS4J"/>
                <entry key="encryptionPropFile" value="transmitter-crypto.properties"/>
                <entry key="signaturePropFile" value="receiver-crypto.properties"/>
                <entry key="user" value="receiver"/>
                <entry key="encryptionUser" value="transmitter"/>
                <entry key="encryptionSymAlgorithm" value="http://www.w3.org/2001/04/xmlenc#aes256-cbc"/>
                <entry key="encryptionKeyTransportAlgorithm" value="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p"/>
                <entry key="signatureParts" value="{Element}{http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd}Timestamp;{Element}{http://schemas.xmlsoap.org/soap/envelope/}Body;{Element}cid:Attachments;"/>
                <entry key="encryptionParts" value="{Content}{http://schemas.xmlsoap.org/soap/envelope/}Body;{Element}cid:Attachments;"/>
            </map>
        </property>
    </bean>

    <bean name="passwordCallbackHandlerWSS4J" class="org.apache.wss4j.cxfIntegration.test.integration.WSS4JCallbackHandlerImpl">
    </bean>

    <httpj:engine-factory bus="cxf">
        <httpj:engine port="9001">
            <httpj:threadingParameters minThreads="50"
                                       maxThreads="200"/>
            <!--      <httpj:connector>
                    <beans:bean class="org.mortbay.jetty.bio.SocketConnector">
                       <beans:property name="port" value="9001" />
                    </beans:bean>
                  </httpj:connector>
            -->
            <httpj:handlers>
                <beans:bean class="org.eclipse.jetty.server.handler.DefaultHandler"/>
            </httpj:handlers>
            <httpj:sessionSupport>false</httpj:sessionSupport>
        </httpj:engine>
    </httpj:engine-factory>
</beans>
